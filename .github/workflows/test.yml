name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache renv packages
        uses: actions/cache@v3
        with:
          path: |
            renv/library
          key: ${{ runner.os }}-renv

      - name: Install system dependencies
        run: |
          echo $RUNNER_OS &&
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev;
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "not implemented"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "not implemented"
          else
            echo "$RUNNER_OS not supported";
            exit 1
          fi
        shell: bash

      - name: Install deps for checks
        run: |
          echo $RUNNER_OS &&
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y cppcheck texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra;
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "not implemented"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "not implemented"
          else
            echo "$RUNNER_OS not supported";
            exit 1
          fi
        shell: bash

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Install dependencies
        run: |
          make install

      - name: Run checks
        run: |
          make check
          make check
          make build-check

      - name: Run tests
        run: |
          make test

      - name: Upload Coverage
        run: |
          Rscript -e 'covr::codecov(token = "${{ secrets.CODECOV_TOKEN }}")'
